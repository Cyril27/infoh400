/* To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ulb.lisa.infoh400.labs2022.view;

import javax.persistence.EntityManagerFactory;

import javax.persistence.Persistence;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import ulb.lisa.infoh400.labs2022.controller.DoctorJpaController;
import ulb.lisa.infoh400.labs2022.controller.PersonJpaController;
import ulb.lisa.infoh400.labs2022.controller.exceptions.IllegalOrphanException;
import ulb.lisa.infoh400.labs2022.controller.exceptions.NonexistentEntityException;
import ulb.lisa.infoh400.labs2022.model.Doctor;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JTextField;
import javax.swing.UIManager;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author Adrien Foucart
 */
public class AddDoctorWindow extends javax.swing.JFrame {
    private final EntityManagerFactory emfac = Persistence.createEntityManagerFactory("infoh400_PU");
    private final DoctorJpaController doctorCtrl = new DoctorJpaController(emfac);
    private final PersonJpaController personCtrl = new PersonJpaController(emfac);
    
    private static final Logger LOGGER = LogManager.getLogger(AddPatientWindow.class.getName());
    
    Doctor doctor = null;
    
    /**
     * Creates new form AddPatientWindow
     */
    public AddDoctorWindow() {
    	getContentPane().setBackground(UIManager.getColor("FormattedTextField.selectionBackground"));
        initComponents();
    }
    
    public void setDoctor(Doctor doctor){
        this.doctor = doctor;
        
        addPersonPanel.setPerson(doctor.getIdperson());
        inamiTextField.setText(doctor.getInami());
        specialtyTextField.setText(doctor.getSpecialty());
        //statusComboBox.setSelectedItem(patient.getStatus());
    }
    
    public Doctor getDoctor(){
        updateDoctor();
                
        return doctor;
    }
    
    public void updateDoctor(){
        if( doctor == null ){
            doctor = new Doctor();
        }
        
        doctor.setIdperson(addPersonPanel.getPerson());
        doctor.setInami(inamiTextField.getText());
        doctor.setSpecialty(specialtyTextField.getText());
        //patient.setinami(inamiTextField.getText());
        //patient.setStatus((String) statusComboBox.getSelectedItem());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        addPersonPanel = new ulb.lisa.infoh400.labs2022.view.AddPersonPanel();
        addPersonPanel.setBackground(new Color(255, 255, 255));
        jLabel2 = new javax.swing.JLabel();
        inamiTextField = new javax.swing.JTextField();
        
        
        inamiTextField.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		int r = ThreadLocalRandom.current().nextInt(125, 254 + 1);
        		int g = ThreadLocalRandom.current().nextInt(125, 254 + 1);
        		int b = ThreadLocalRandom.current().nextInt(125, 254 + 1);
        		
        		Color c = new Color(r,g,b);
        		
        		addPersonPanel.setBackground(c);
        		
        		if(e.getKeyCode() == KeyEvent.VK_ENTER) {
        			Color c2 = new Color(255,255,255);
        			addPersonPanel.setBackground(c2);
        		}
        		
        		
        		
        	}
        });
        
        
        
        
        
        
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        
        specialtyTextField = new javax.swing.JTextField();


        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Doctor");

        jLabel2.setText("Inami:");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Specialty:");
        
        //specialtytextField = new JTextField();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(addPersonPanel, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createParallelGroup(Alignment.LEADING)
        							.addGroup(layout.createSequentialGroup()
        								.addComponent(saveButton)
        								.addGap(81))
        							.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        								.addComponent(jLabel2)
        								.addGap(53)))
        						.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        							.addComponent(jLabel3)
        							.addGap(40)))
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(cancelButton)
        						.addComponent(specialtyTextField, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE)
        						.addComponent(inamiTextField, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE))))
        			.addContainerGap(197, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(addPersonPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(inamiTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel2))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(specialtyTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel3))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(saveButton)
        				.addComponent(cancelButton))
        			.addGap(0, 5, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        updateDoctor();

        // Create person if necessary:
        if( doctor.getIdperson().getIdperson() == null ){
            personCtrl.create(doctor.getIdperson());
            LOGGER.debug("Created new person (id = %d)".formatted(doctor.getIdperson().getIdperson()));
        }
        // Create patient if necessary
        if( doctor.getIddoctor() == null ){
            doctorCtrl.create(doctor);
            LOGGER.debug("Created new patient (id = %d)".formatted(doctor.getIddoctor()));
        }
        
        // Save changes
        try {
            personCtrl.edit(doctor.getIdperson());
            doctorCtrl.edit(doctor);
            LOGGER.debug("Edited patient (id = %d)".formatted(doctor.getIddoctor()));
        } catch (NonexistentEntityException | IllegalOrphanException ex) {
            LOGGER.error("Couldn't edit doctor", ex);
        } catch (Exception ex){
            LOGGER.error("Couldn't edit doctor", ex);
        }
        
        this.dispose();        
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ulb.lisa.infoh400.labs2022.view.AddPersonPanel addPersonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField inamiTextField;
    private javax.swing.JButton saveButton;
    
    private javax.swing.JTextField specialtyTextField;
    //private JTextField specialtytextField;
}
